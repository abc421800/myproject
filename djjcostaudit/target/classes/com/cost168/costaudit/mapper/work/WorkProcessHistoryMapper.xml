<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cost168.costaudit.mapper.work.WorkProcessHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.cost168.costaudit.pojo.work.WorkProcessHistory" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="process_id" property="processId" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="opinion" property="opinion" jdbcType="VARCHAR" />
    <result column="operator_node" property="operatorNode" jdbcType="VARCHAR" />
    <result column="operator_time" property="operatorTime" jdbcType="TIMESTAMP" />
    <result column="related_id" property="relatedId" jdbcType="VARCHAR" />
    <result column="related_name" property="relatedName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="reject" property="reject" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="orderTime" property="orderTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, process_id, operator_id, operator_name, opinion, operator_node, operator_time, 
    related_id, related_name, create_time, reject, remark, orderTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_process_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectListByMap" resultMap="BaseResultMap" parameterType="map" >
  	select
    <include refid="Base_Column_List" />
    from work_process_history p
     <where>
     		<if test="id != null and id !=''" >
     			and p.id = #{id}
   			</if>
   			<if test="processId != null and id !=''" >
     			and p.process_id = #{processId}
   			</if>
   			<if test="operatorNode != null and operatorNode !=''" >
     			and p.operator_node = #{operatorNode}
   			</if>
   			<if test="orderTime != null and orderTime !=''" >
     			and p.orderTime = #{orderTime}
   			</if>
        </where>
        order by p.orderTime desc
     <if test="isPage==true">
    		limit #{curPage},#{pageSize}
    </if>
  </select>
  <select id="getCurrentNode" parameterType="map" resultMap="BaseResultMap">
    SELECT * from work_process_history as h 
      <where>
         <if test="processId != null">
             and  h.process_id=#{processId}
         </if>
         and h.operator_time is null
      </where>
  </select>
  <select id="selectCountByMap" resultType="java.lang.Integer" parameterType="map" >
    select count(*)  from work_process_history p
     <where>
     		<if test="id != null and id !=''" >
     			and p.id = #{id}
   			</if>
     		<if test="processId != null and id !=''" >
     			and p.process_id = #{processId}
   			</if>
   			<if test="operatorNode != null and operatorNode !=''" >
     			and p.operator_node = #{operatorNode}
   			</if>
   			<if test="orderTime != null and orderTime !=''" >
     			and p.orderTime = #{orderTime}
   			</if>
        </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from work_process_history
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from work_process_history
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistoryExample" >
    delete from work_process_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistory" >
    insert into work_process_history (id, process_id, operator_id, 
      operator_name, opinion, operator_node, 
      operator_time, related_id, related_name, 
      create_time, reject, remark, orderTime
      )
    values (#{id,jdbcType=VARCHAR}, #{processId,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, 
      #{operatorName,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, #{operatorNode,jdbcType=VARCHAR}, 
      #{operatorTime,jdbcType=TIMESTAMP}, #{relatedId,jdbcType=VARCHAR}, #{relatedName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{reject,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{orderTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistory" >
    insert into work_process_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
      <if test="opinion != null" >
        opinion,
      </if>
      <if test="operatorNode != null" >
        operator_node,
      </if>
      <if test="operatorTime != null" >
        operator_time,
      </if>
      <if test="relatedId != null" >
        related_id,
      </if>
      <if test="relatedName != null" >
        related_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="reject != null" >
        reject,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="orderTime != null" >
        orderTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null" >
        #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="operatorNode != null" >
        #{operatorNode,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relatedId != null" >
        #{relatedId,jdbcType=VARCHAR},
      </if>
      <if test="relatedName != null" >
        #{relatedName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reject != null" >
        #{reject,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistoryExample" resultType="java.lang.Integer" >
    select count(*) from work_process_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work_process_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null" >
        process_id = #{record.processId,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null" >
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.opinion != null" >
        opinion = #{record.opinion,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorNode != null" >
        operator_node = #{record.operatorNode,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorTime != null" >
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.relatedId != null" >
        related_id = #{record.relatedId,jdbcType=VARCHAR},
      </if>
      <if test="record.relatedName != null" >
        related_name = #{record.relatedName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reject != null" >
        reject = #{record.reject,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null" >
        orderTime = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work_process_history
    set id = #{record.id,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      opinion = #{record.opinion,jdbcType=VARCHAR},
      operator_node = #{record.operatorNode,jdbcType=VARCHAR},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      related_id = #{record.relatedId,jdbcType=VARCHAR},
      related_name = #{record.relatedName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      reject = #{record.reject,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      orderTime = #{record.orderTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistory" >
    update work_process_history
    <set >
      <if test="processId != null" >
        process_id = #{processId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null" >
        opinion = #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="operatorNode != null" >
        operator_node = #{operatorNode,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relatedId != null" >
        related_id = #{relatedId,jdbcType=VARCHAR},
      </if>
      <if test="relatedName != null" >
        related_name = #{relatedName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reject != null" >
        reject = #{reject,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        orderTime = #{orderTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cost168.costaudit.pojo.work.WorkProcessHistory" >
    update work_process_history
    set process_id = #{processId,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      opinion = #{opinion,jdbcType=VARCHAR},
      operator_node = #{operatorNode,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      related_id = #{relatedId,jdbcType=VARCHAR},
      related_name = #{relatedName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reject = #{reject,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      orderTime = #{orderTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>