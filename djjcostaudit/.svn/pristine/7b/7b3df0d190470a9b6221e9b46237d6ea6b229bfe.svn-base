package com.cost168.costaudit.controller.yaohao;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cost168.costaudit.pojo.cost.CostEnterprise;
import com.cost168.costaudit.pojo.yaohao.YaohaoWinbid;
import com.cost168.costaudit.service.cost.CostEnterpriseService;
import com.cost168.costaudit.service.yaohao.YaohaoWinbidService;
import com.cost168.costaudit.utils.EUDataGridResult;
import com.cost168.costaudit.utils.ExcelUtil;
import com.cost168.costaudit.utils.JsonUtils;

/**
 * 
 * ClassName: YaohaoWinbidController 
 * @Description: TODO
 * @author lixiang
 * @date 2019-7-8下午5:27:43
 * @Company 广东华联软件科技有限公司
 */
@Controller
@RequestMapping("/yaohaoWinbid")
public class YaohaoWinbidController {
	
	
	@Autowired
	private YaohaoWinbidService yaohaoWinbidService;
	@Autowired
	private CostEnterpriseService costEnterpriseService;
	
	@ResponseBody
	@RequestMapping("/list")
	public EUDataGridResult list(HttpServletRequest request,YaohaoWinbid yaohaoWinbid, int page, int rows) {
		EUDataGridResult result=new EUDataGridResult();
		Map<String,Object> map=new HashMap<String,Object>();
		Map<String,Object> selectMap=JsonUtils.object2Map(yaohaoWinbid);
		try {
			String startTime =request.getParameter("startTime");
			String endTime =request.getParameter("endTime");
			if(null!=startTime && !"".equals(startTime)){
				map.put("startTime", startTime+" 00:00:00");
			}
			if(null!=endTime && !"".equals(endTime)){
				map.put("endTime", endTime+" 24:00:00");
			}
			map.putAll(selectMap);
			map.put("isPage", true);
		    map.put("curPage", rows*(page-1));
		    map.put("pageSize", rows);
		    List<YaohaoWinbid> list= yaohaoWinbidService.selectListByMap(map);
		    int total= yaohaoWinbidService.selectCountByMap(map);
			result.setRows(list);
			result.setTotal(total);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	//导出中签记录
	@ResponseBody
	@RequestMapping("/exportYaohaoWinbid")
	public void exportYaohaoOrder(HttpServletRequest request,HttpServletResponse response){
		List<YaohaoWinbid> list =new ArrayList<YaohaoWinbid>();
		String ids=request.getParameter("ids");
		try {
			if(null!=ids && !"".equals(ids)){
				String arr[]=ids.split(",");
				for(String id:arr){
					YaohaoWinbid winbid=yaohaoWinbidService.selectByPrimaryKey(id);
					list.add(winbid);
				}
			}else{	
				list= yaohaoWinbidService.selectListByMap(null);
			}
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
			String path=request.getSession().getServletContext().getRealPath("/template/report/yaohaowinbid_template.xlsx");
			String newPath="";
			String dateString = formatter.format(new Date());
			newPath=request.getSession().getServletContext().getRealPath("/template/temp/中签记录_"+dateString+".xlsx");
			Map<String,List<List<String>>>  date=new HashMap<String, List<List<String>>>();
			List<List<String>> rowList=new ArrayList<List<String>>(); 
			List<String> cellList=new ArrayList<String>();
			for(YaohaoWinbid l:list){
				CostEnterprise  e=costEnterpriseService.selectByCostEnterpriseCode(l.getEnterpriseCode());
				if(null!=e){
					l.setEnterpriseName(e.getName());
				}
				cellList =new ArrayList<String>();
				cellList.add(l.getOrderCode());
				cellList.add(l.getYaohaoGrade());
				cellList.add(l.getEnterpriseName());
				cellList.add(l.getAssessResultStr());
				cellList.add(l.getYaohaoTimeStr());
				cellList.add(l.getName());
				cellList.add(l.getDecideAmount().toString());
				cellList.add(l.getServiceAmount().toString());
				cellList.add(l.getCreater());
				rowList.add(cellList);
			}
			date.put("中签记录", rowList);
			try {
				ExcelUtil.copyExcel(1,date,path,newPath,request,response);
			} catch (Exception e) {
				e.printStackTrace();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
