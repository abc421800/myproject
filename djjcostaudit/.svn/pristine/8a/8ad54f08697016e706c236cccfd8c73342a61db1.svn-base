<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cost168.costaudit.mapper.work.WorkRegisterMapper" >
  <resultMap id="BaseResultMap" type="com.cost168.costaudit.pojo.work.WorkRegister" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="person_id" property="personId" jdbcType="VARCHAR" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="VARCHAR" />
    <result column="reg_year_month" property="regYearMonth" jdbcType="VARCHAR" />
    <result column="reg_year" property="regYear" jdbcType="VARCHAR" />
    <result column="reg_month" property="regMonth" jdbcType="VARCHAR" />
    <result column="morning" property="morning" jdbcType="VARCHAR" />
    <result column="afternoon" property="afternoon" jdbcType="VARCHAR" />
    <result column="reg_day" property="regDay" jdbcType="VARCHAR" />
    <result column="working_day" property="workingDay" jdbcType="REAL" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, person_id, enterprise_id, reg_year_month, reg_year, reg_month, morning, afternoon, 
    reg_day, working_day, creater, create_time, update_time, remark, register_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cost168.costaudit.pojo.work.WorkRegisterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectListByMap" resultType="com.cost168.costaudit.pojo.work.vo.WorkRegisterVo" parameterType="map" >
  	
		SELECT m.*,m.am_sb+m.pm_sb AS 'sb',m.am_nxj+m.pm_nxj AS 'nxj', m.am_tqj+m.pm_tqj AS 'tqj',
		m.am_sj+m.pm_sj AS 'sj', m.am_syj+m.pm_syj AS 'syj', m.am_jsj+m.pm_jsj AS 'jsj', 
		m.am_bj+m.pm_bj AS 'bj', m.am_hj+m.pm_hj AS 'hj',m.am_sangj+m.pm_sangj AS 'sangj',
		m.am_lgxx+m.pm_lgxx AS 'lgxx',m.am_cc+m.pm_cc AS 'cc',m.am_kg+m.pm_kg AS 'kg',
		m.am_jb+m.pm_jb AS 'jb',m.am_xx+m.pm_xx AS 'xx',m.am_qt+m.pm_qt AS 'qt'
		FROM(
		SELECT p.id,p.name,e.name AS "enterpriseName",p.annualLeaveUseup AS 'kxnj',
		max(CASE WHEN r.`reg_day`='1' THEN r.morning end) AS 'morning_1',
		max(CASE WHEN r.`reg_day`='1' THEN r.afternoon end) AS 'afternoon_1',
		max(CASE WHEN r.`reg_day`='2' THEN r.morning end) AS 'morning_2',
		max(CASE WHEN r.`reg_day`='2' THEN r.afternoon end) AS 'afternoon_2',
		max(CASE WHEN r.`reg_day`='3' THEN r.morning end) AS 'morning_3',
		max(CASE WHEN r.`reg_day`='3' THEN r.afternoon end) AS 'afternoon_3',
		max(CASE WHEN r.`reg_day`='4' THEN r.morning end) AS 'morning_4',
		max(CASE WHEN r.`reg_day`='4' THEN r.afternoon end) AS 'afternoon_4',
		max(CASE WHEN r.`reg_day`='5' THEN r.morning end) AS 'morning_5',
		max(CASE WHEN r.`reg_day`='5' THEN r.afternoon end) AS 'afternoon_5',
		max(CASE WHEN r.`reg_day`='6' THEN r.morning end) AS 'morning_6',
		max(CASE WHEN r.`reg_day`='6' THEN r.afternoon end) AS 'afternoon_6',
		max(CASE WHEN r.`reg_day`='7' THEN r.morning end) AS 'morning_7',
		max(CASE WHEN r.`reg_day`='7' THEN r.afternoon end) AS 'afternoon_7',
		max(CASE WHEN r.`reg_day`='8' THEN r.morning end) AS 'morning_8',
		max(CASE WHEN r.`reg_day`='8' THEN r.afternoon end) AS 'afternoon_8',
		max(CASE WHEN r.`reg_day`='9' THEN r.morning end) AS 'morning_9',
		max(CASE WHEN r.`reg_day`='9' THEN r.afternoon end) AS 'afternoon_9',
		max(CASE WHEN r.`reg_day`='10' THEN r.morning end) AS 'morning_10',
		max(CASE WHEN r.`reg_day`='10' THEN r.afternoon end) AS 'afternoon_10',
		max(CASE WHEN r.`reg_day`='11' THEN r.morning end) AS 'morning_11',
		max(CASE WHEN r.`reg_day`='11' THEN r.afternoon end) AS 'afternoon_11',
		max(CASE WHEN r.`reg_day`='12' THEN r.morning end) AS 'morning_12',
		max(CASE WHEN r.`reg_day`='12' THEN r.afternoon end) AS 'afternoon_12',
		max(CASE WHEN r.`reg_day`='13' THEN r.morning end) AS 'morning_13',
		max(CASE WHEN r.`reg_day`='13' THEN r.afternoon end) AS 'afternoon_13',
		max(CASE WHEN r.`reg_day`='14' THEN r.morning end) AS 'morning_14',
		max(CASE WHEN r.`reg_day`='14' THEN r.afternoon end) AS 'afternoon_14',
		max(CASE WHEN r.`reg_day`='15' THEN r.morning end) AS 'morning_15',
		max(CASE WHEN r.`reg_day`='15' THEN r.afternoon end) AS 'afternoon_15',
		max(CASE WHEN r.`reg_day`='16' THEN r.morning end) AS 'morning_16',
		max(CASE WHEN r.`reg_day`='16' THEN r.afternoon end) AS 'afternoon_16',
		max(CASE WHEN r.`reg_day`='17' THEN r.morning end) AS 'morning_17',
		max(CASE WHEN r.`reg_day`='17' THEN r.afternoon end) AS 'afternoon_17',
		max(CASE WHEN r.`reg_day`='18' THEN r.morning end) AS 'morning_18',
		max(CASE WHEN r.`reg_day`='18' THEN r.afternoon end) AS 'afternoon_18',
		max(CASE WHEN r.`reg_day`='19' THEN r.morning end) AS 'morning_19',
		max(CASE WHEN r.`reg_day`='19' THEN r.afternoon end) AS 'afternoon_19',
		max(CASE WHEN r.`reg_day`='20' THEN r.morning end) AS 'morning_20',
		max(CASE WHEN r.`reg_day`='20' THEN r.afternoon end) AS 'afternoon_20',
		max(CASE WHEN r.`reg_day`='21' THEN r.morning end) AS 'morning_21',
		max(CASE WHEN r.`reg_day`='21' THEN r.afternoon end) AS 'afternoon_21',
		max(CASE WHEN r.`reg_day`='22' THEN r.morning end) AS 'morning_22',
		max(CASE WHEN r.`reg_day`='22' THEN r.afternoon end) AS 'afternoon_22',
		max(CASE WHEN r.`reg_day`='23' THEN r.morning end) AS 'morning_23',
		max(CASE WHEN r.`reg_day`='23' THEN r.afternoon end) AS 'afternoon_23',
		max(CASE WHEN r.`reg_day`='24' THEN r.morning end) AS 'morning_24',
		max(CASE WHEN r.`reg_day`='24' THEN r.afternoon end) AS 'afternoon_24',
		max(CASE WHEN r.`reg_day`='25' THEN r.morning end) AS 'morning_25',
		max(CASE WHEN r.`reg_day`='25' THEN r.afternoon end) AS 'afternoon_25',
		max(CASE WHEN r.`reg_day`='26' THEN r.morning end) AS 'morning_26',
		max(CASE WHEN r.`reg_day`='26' THEN r.afternoon end) AS 'afternoon_26',
		max(CASE WHEN r.`reg_day`='27' THEN r.morning end) AS 'morning_27',
		max(CASE WHEN r.`reg_day`='27' THEN r.afternoon end) AS 'afternoon_27',
		max(CASE WHEN r.`reg_day`='28' THEN r.morning end) AS 'morning_28',
		max(CASE WHEN r.`reg_day`='28' THEN r.afternoon end) AS 'afternoon_28',
		max(CASE WHEN r.`reg_day`='29' THEN r.morning end) AS 'morning_29',
		max(CASE WHEN r.`reg_day`='29' THEN r.afternoon end) AS 'afternoon_29',
		max(CASE WHEN r.`reg_day`='30' THEN r.morning end) AS 'morning_30',
		max(CASE WHEN r.`reg_day`='30' THEN r.afternoon end) AS 'afternoon_30',
		max(CASE WHEN r.`reg_day`='31' THEN r.morning end) AS 'morning_31',
		max(CASE WHEN r.`reg_day`='31' THEN r.afternoon end) AS 'afternoon_31',
		
		SUM(CASE WHEN r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb',
		SUM(CASE WHEN r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb',
		SUM(CASE WHEN r.morning='年休假' THEN 0.5 ELSE 0 END) AS 'am_nxj',
		SUM(CASE WHEN r.afternoon='年休假' THEN 0.5 ELSE 0 END) AS 'pm_nxj',
		SUM(CASE WHEN r.morning='探亲假' THEN 0.5 ELSE 0 END) AS 'am_tqj',
		SUM(CASE WHEN r.afternoon='探亲假' THEN 0.5 ELSE 0 END) AS 'pm_tqj',
		SUM(CASE WHEN r.morning='事假' THEN 0.5 ELSE 0 END) AS 'am_sj',
		SUM(CASE WHEN r.afternoon='事假' THEN 0.5 ELSE 0 END) AS 'pm_sj',
		SUM(CASE WHEN r.morning='生育假' THEN 0.5 ELSE 0 END) AS 'am_syj',
		SUM(CASE WHEN r.afternoon='生育假' THEN 0.5 ELSE 0 END) AS 'pm_syj',
		SUM(CASE WHEN r.morning='计生假' THEN 0.5 ELSE 0 END) AS 'am_jsj',
		SUM(CASE WHEN r.afternoon='计生假' THEN 0.5 ELSE 0 END) AS 'pm_jsj',
		SUM(CASE WHEN r.morning='病假' THEN 0.5 ELSE 0 END) AS 'am_bj',
		SUM(CASE WHEN r.afternoon='病假' THEN 0.5 ELSE 0 END) AS 'pm_bj',
		SUM(CASE WHEN r.morning='婚假' THEN 0.5 ELSE 0 END) AS 'am_hj',
		SUM(CASE WHEN r.afternoon='婚假' THEN 0.5 ELSE 0 END) AS 'pm_hj',
		SUM(CASE WHEN r.morning='丧假' THEN 0.5 ELSE 0 END) AS 'am_sangj',
		SUM(CASE WHEN r.afternoon='丧假' THEN 0.5 ELSE 0 END) AS 'pm_sangj',
		SUM(CASE WHEN r.morning='离岗学习' THEN 0.5 ELSE 0 END) AS 'am_lgxx',
		SUM(CASE WHEN r.afternoon='离岗学习' THEN 0.5 ELSE 0 END) AS 'pm_lgxx',
		SUM(CASE WHEN r.morning='出差' THEN 0.5 ELSE 0 END) AS 'am_cc',
		SUM(CASE WHEN r.afternoon='出差' THEN 0.5 ELSE 0 END) AS 'pm_cc',
		SUM(CASE WHEN r.morning='旷工' THEN 0.5 ELSE 0 END) AS 'am_kg',
		SUM(CASE WHEN r.afternoon='旷工' THEN 0.5 ELSE 0 END) AS 'pm_kg',
		SUM(CASE WHEN r.morning='加班' THEN 0.5 ELSE 0 END) AS 'am_jb',
		SUM(CASE WHEN r.afternoon='加班' THEN 0.5 ELSE 0 END) AS 'pm_jb',
		SUM(CASE WHEN r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx',
		SUM(CASE WHEN r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx',
		SUM(CASE WHEN r.morning='其他' THEN 0.5 ELSE 0 END) AS 'am_qt',
		SUM(CASE WHEN r.afternoon='其他' THEN 0.5 ELSE 0 END) AS 'pm_qt',
		GROUP_CONCAT(CASE WHEN r.morning='其他' OR r.afternoon='其他' THEN r.remark END) AS 'reg_remark',
		GROUP_CONCAT(DISTINCT r.creater) AS 'reg_creater'
		FROM work_person p LEFT JOIN work_register r ON p.account=r.person_id
		<if test="regYearMonth !=null and regYearMonth != ''">
		 	and r.reg_year_month = #{regYearMonth} 
		</if>
		LEFT JOIN work_enterprise e ON p.enterprise_id = e.id
		 <where>
		 	<if test="name != null and name !=''">
		 		and p.name like concat('%',#{name},'%')
		 	</if>
		    <if test="enterpriseName != null and enterpriseName !=''">
		 		and e.name like concat('%',#{enterpriseName},'%')
		 	</if>
		 	<if test="morningOrAfternoon != null and morningOrAfternoon !=''">
		 		and (r.morning = #{morningOrAfternoon} or r.afternoon= #{morningOrAfternoon})
		 	</if>
		 </where>
		 
		 GROUP BY p.id order by p.create_time desc )m


     <if test="isPage==true">
    		limit #{curPage},#{pageSize}
    </if>
  </select>
  <select id="selectCountByMap" resultType="java.lang.Integer" parameterType="map" >
   SELECT COUNT(m.id) FROM
	(
	SELECT p.id FROM work_person p LEFT JOIN work_register r 
	ON p.account=r.person_id 
	<if test="regYearMonth !=null and regYearMonth != ''">
	 	and r.reg_year_month = #{regYearMonth} 
	</if>
	LEFT JOIN work_enterprise e ON p.enterprise_id = e.id
	 <where>
	 	<if test="name != null and name !=''">
	 		and p.name like concat('%',#{name},'%')
	 	</if>
	    <if test="enterpriseName != null and enterpriseName !=''">
	 		and e.name like concat('%',#{enterpriseName},'%')
	 	</if>
	 	<if test="morningOrAfternoon != null and morningOrAfternoon !=''">
	 		and (r.morning = #{morningOrAfternoon} or r.afternoon= #{morningOrAfternoon})
	 	</if>
	 </where>
	GROUP BY p.id)m
  </select>
  <select id="selectYearList" resultType="java.lang.String" parameterType="map" >
  	SELECT GROUP_CONCAT(DISTINCT reg_year) FROM work_register
  </select>
  <select id="selectMonthList" resultType="java.lang.String" parameterType="map" >
  	SELECT GROUP_CONCAT(DISTINCT reg_month) FROM work_register
  </select>
  <select id="selectByDay" resultMap="BaseResultMap" parameterType="map"  >
    select 
    <include refid="Base_Column_List" />
    from work_register r
    <where>
    	<if test="personId != null and personId !=''" >
     			and r.person_id = #{personId}
   		</if>
   		<if test="regYear != null and regYear !=''" >
     			and r.reg_year = #{regYear}
   		</if>
   		<if test="regMonth != null and regMonth !=''" >
     			and r.reg_month = #{regMonth}
   		</if>
   		<if test="regDay != null and regDay !=''" >
     			and r.reg_day = #{regDay}
   		</if>
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from work_register
    where id = #{id,jdbcType=VARCHAR}
  </select>
    <!--考勤人员台账-->
    <select id="selectWorkAttendancePerson" resultType="com.cost168.costaudit.pojo.work.vo.WorkAttendanceParam" parameterType="map">
        SELECT m.*
        ,m.am_sb1+m.pm_sb1 AS 'monthOfWorkday1',m.am_xx1+m.pm_xx1 AS 'monthOfRestday1',m.am_qj1+m.pm_qj1 AS 'monthOfLeave1'
        ,m.am_jb1+m.pm_jb1 AS 'monthOfOvertime1'

        ,m.am_sb2+m.pm_sb2 AS 'monthOfWorkday2',m.am_xx2+m.pm_xx2 AS 'monthOfRestday2',m.am_qj2+m.pm_qj2 AS 'monthOfLeave2'
        ,m.am_jb2+m.pm_jb2 AS 'monthOfOvertime2'

        ,m.am_sb3+m.pm_sb3 AS 'monthOfWorkday3',m.am_xx3+m.pm_xx3 AS 'monthOfRestday3',m.am_qj3+m.pm_qj3 AS 'monthOfLeave3'
        ,m.am_jb3+m.pm_jb3 AS 'monthOfOvertime3'

        ,m.am_sb4+m.pm_sb4 AS 'monthOfWorkday4',m.am_xx4+m.pm_xx4 AS 'monthOfRestday4',m.am_qj4+m.pm_qj4 AS 'monthOfLeave4'
        ,m.am_jb4+m.pm_jb4 AS 'monthOfOvertime4'

        ,m.am_sb5+m.pm_sb5 AS 'monthOfWorkday5',m.am_xx5+m.pm_xx5 AS 'monthOfRestday5',m.am_qj5+m.pm_qj5 AS 'monthOfLeave5'
        ,m.am_jb5+m.pm_jb5 AS 'monthOfOvertime5'

        ,m.am_sb6+m.pm_sb6 AS 'monthOfWorkday6',m.am_xx6+m.pm_xx6 AS 'monthOfRestday6',m.am_qj6+m.pm_qj6 AS 'monthOfLeave6'
        ,m.am_jb6+m.pm_jb6 AS 'monthOfOvertime6'

        ,m.am_sb7+m.pm_sb7 AS 'monthOfWorkday7',m.am_xx7+m.pm_xx7 AS 'monthOfRestday7',m.am_qj7+m.pm_qj7 AS 'monthOfLeave7'
        ,m.am_jb7+m.pm_jb7 AS 'monthOfOvertime7'

        ,m.am_sb8+m.pm_sb8 AS 'monthOfWorkday8',m.am_xx8+m.pm_xx8 AS 'monthOfRestday8',m.am_qj8+m.pm_qj8 AS 'monthOfLeave8'
        ,m.am_jb8+m.pm_jb8 AS 'monthOfOvertime8'

        ,m.am_sb9+m.pm_sb9 AS 'monthOfWorkday9',m.am_xx9+m.pm_xx9 AS 'monthOfRestday9',m.am_qj9+m.pm_qj9 AS 'monthOfLeave9'
        ,m.am_jb9+m.pm_jb9 AS 'monthOfOvertime9'

        ,m.am_sb10+m.pm_sb10 AS 'monthOfWorkday10',m.am_xx10+m.pm_xx10 AS 'monthOfRestday10',m.am_qj10+m.pm_qj10 AS 'monthOfLeave10'
        ,m.am_jb10+m.pm_jb10 AS 'monthOfOvertime10'

        ,m.am_sb11+m.pm_sb11 AS 'monthOfWorkday11',m.am_xx11+m.pm_xx11 AS 'monthOfRestday11',m.am_qj11+m.pm_qj11 AS 'monthOfLeave11'
        ,m.am_jb11+m.pm_jb11 AS 'monthOfOvertime11'

        ,m.am_sb12+m.pm_sb12 AS 'monthOfWorkday12',m.am_xx12+m.pm_xx12 AS 'monthOfRestday12',m.am_qj12+m.pm_qj12 AS 'monthOfLeave12'
        ,m.am_jb12+m.pm_jb12 AS 'monthOfOvertime12'

        ,m.am_sb1+m.pm_sb1+m.am_sb2+m.pm_sb2+m.am_sb3+m.pm_sb3+m.am_sb4+m.pm_sb4+m.am_sb5+m.pm_sb5+m.am_sb6+m.pm_sb6+m.am_sb7+m.pm_sb7+m.am_sb8+m.pm_sb8
        +m.am_sb9+m.pm_sb9+m.am_sb10+m.pm_sb10+m.am_sb11+m.pm_sb11+m.am_sb12+m.pm_sb12 AS 'yearOfWork'

        ,m.am_xx1+m.pm_xx1+m.am_xx2+m.pm_xx2+m.am_xx3+m.pm_xx3+m.am_xx4+m.pm_xx4+m.am_xx5+m.pm_xx5+m.am_xx6+m.pm_xx6+m.am_xx7+m.pm_xx7+m.am_xx8+m.pm_xx8
        +m.am_xx9+m.pm_xx9+m.am_xx10+m.pm_xx10+m.am_xx11+m.pm_xx11+m.am_xx12+m.pm_xx12 AS 'yearOfRest'

        ,m.am_qj1+m.pm_qj1+m.am_qj2+m.pm_qj2+m.am_qj3+m.pm_qj3+m.am_qj4+m.pm_qj4+m.am_qj5+m.pm_qj5+m.am_qj6+m.pm_qj6+m.am_qj7+m.pm_qj7+m.am_qj8+m.pm_qj8
        +m.am_qj9+m.pm_qj9+m.am_qj10+m.pm_qj10+m.am_qj11+m.pm_qj11+m.am_qj12+m.pm_qj12 AS 'yearOfLeave'

        ,m.am_jb1+m.pm_jb1+m.am_jb2+m.pm_jb2+m.am_jb3+m.pm_jb3+m.am_jb4+m.pm_jb4+m.am_jb5+m.pm_jb5+m.am_jb6+m.pm_jb6+m.am_jb7+m.pm_jb7+m.am_jb8+m.pm_jb8
        +m.am_jb9+m.pm_jb9+m.am_jb10+m.pm_jb10+m.am_jb11+m.pm_jb11+m.am_jb12+m.pm_jb12 AS 'yearOvertime'

        FROM
        (
        SELECT  p.id,p.name,e.name AS "enterpriseName",p.effective_flag AS status,(p.annualLeaveTotal-p.annualLeaveUseup) AS annual
        ,(365-'yearOfRest') AS attendanceRate,r.reg_year AS year,
        SUM(CASE WHEN r.reg_month='1' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb1',
        SUM(CASE WHEN r.reg_month='1' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb1',
        SUM(CASE WHEN r.reg_month='1' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx1',
        SUM(CASE WHEN r.reg_month='1' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx1',
        SUM(CASE WHEN r.reg_month='1' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj1',
        SUM(CASE WHEN r.reg_month='1' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj1',
        SUM(CASE WHEN r.reg_month='1' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb1',
        SUM(CASE WHEN r.reg_month='1' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb1',

        SUM(CASE WHEN r.reg_month='2' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb2',
        SUM(CASE WHEN r.reg_month='2' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb2',
        SUM(CASE WHEN r.reg_month='2' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx2',
        SUM(CASE WHEN r.reg_month='2' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx2',
        SUM(CASE WHEN r.reg_month='2' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj2',
        SUM(CASE WHEN r.reg_month='2' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj2',
        SUM(CASE WHEN r.reg_month='2' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb2',
        SUM(CASE WHEN r.reg_month='2' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb2',

        SUM(CASE WHEN r.reg_month='3' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb3',
        SUM(CASE WHEN r.reg_month='3' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb3',
        SUM(CASE WHEN r.reg_month='3' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx3',
        SUM(CASE WHEN r.reg_month='3' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx3',
        SUM(CASE WHEN r.reg_month='3' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj3',
        SUM(CASE WHEN r.reg_month='3' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj3',
        SUM(CASE WHEN r.reg_month='3' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb3',
        SUM(CASE WHEN r.reg_month='3' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb3',

        SUM(CASE WHEN r.reg_month='4' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb4',
        SUM(CASE WHEN r.reg_month='4' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb4',
        SUM(CASE WHEN r.reg_month='4' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx4',
        SUM(CASE WHEN r.reg_month='4' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx4',
        SUM(CASE WHEN r.reg_month='4' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj4',
        SUM(CASE WHEN r.reg_month='4' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj4',
        SUM(CASE WHEN r.reg_month='4' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb4',
        SUM(CASE WHEN r.reg_month='4' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb4',

        SUM(CASE WHEN r.reg_month='5' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb5',
        SUM(CASE WHEN r.reg_month='5' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb5',
        SUM(CASE WHEN r.reg_month='5' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx5',
        SUM(CASE WHEN r.reg_month='5' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx5',
        SUM(CASE WHEN r.reg_month='5' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj5',
        SUM(CASE WHEN r.reg_month='5' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj5',
        SUM(CASE WHEN r.reg_month='5' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb5',
        SUM(CASE WHEN r.reg_month='5' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb5',

        SUM(CASE WHEN r.reg_month='6' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb6',
        SUM(CASE WHEN r.reg_month='6' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb6',
        SUM(CASE WHEN r.reg_month='6' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx6',
        SUM(CASE WHEN r.reg_month='6' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx6',
        SUM(CASE WHEN r.reg_month='6' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj6',
        SUM(CASE WHEN r.reg_month='6' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj6',
        SUM(CASE WHEN r.reg_month='6' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb6',
        SUM(CASE WHEN r.reg_month='6' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb6',

        SUM(CASE WHEN r.reg_month='7' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb7',
        SUM(CASE WHEN r.reg_month='7' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb7',
        SUM(CASE WHEN r.reg_month='7' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx7',
        SUM(CASE WHEN r.reg_month='7' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx7',
        SUM(CASE WHEN r.reg_month='7' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj7',
        SUM(CASE WHEN r.reg_month='7' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj7',
        SUM(CASE WHEN r.reg_month='7' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb7',
        SUM(CASE WHEN r.reg_month='7' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb7',

        SUM(CASE WHEN r.reg_month='8' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb8',
        SUM(CASE WHEN r.reg_month='8' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb8',
        SUM(CASE WHEN r.reg_month='8' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx8',
        SUM(CASE WHEN r.reg_month='8' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx8',
        SUM(CASE WHEN r.reg_month='8' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj8',
        SUM(CASE WHEN r.reg_month='8' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj8',
        SUM(CASE WHEN r.reg_month='8' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb8',
        SUM(CASE WHEN r.reg_month='8' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb8',

        SUM(CASE WHEN r.reg_month='9' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb9',
        SUM(CASE WHEN r.reg_month='9' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb9',
        SUM(CASE WHEN r.reg_month='9' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx9',
        SUM(CASE WHEN r.reg_month='9' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx9',
        SUM(CASE WHEN r.reg_month='9' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj9',
        SUM(CASE WHEN r.reg_month='9' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj9',
        SUM(CASE WHEN r.reg_month='9' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb9',
        SUM(CASE WHEN r.reg_month='9' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb9',

        SUM(CASE WHEN r.reg_month='10' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb10',
        SUM(CASE WHEN r.reg_month='10' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb10',
        SUM(CASE WHEN r.reg_month='10' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx10',
        SUM(CASE WHEN r.reg_month='10' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx10',
        SUM(CASE WHEN r.reg_month='10' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj10',
        SUM(CASE WHEN r.reg_month='10' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj10',
        SUM(CASE WHEN r.reg_month='10' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb10',
        SUM(CASE WHEN r.reg_month='10' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb10',

        SUM(CASE WHEN r.reg_month='11' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb11',
        SUM(CASE WHEN r.reg_month='11' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb11',
        SUM(CASE WHEN r.reg_month='11' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx11',
        SUM(CASE WHEN r.reg_month='11' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx11',
        SUM(CASE WHEN r.reg_month='11' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj11',
        SUM(CASE WHEN r.reg_month='11' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj11',
        SUM(CASE WHEN r.reg_month='11' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb11',
        SUM(CASE WHEN r.reg_month='11' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb11',

        SUM(CASE WHEN r.reg_month='12' AND r.morning='上班' THEN 0.5 ELSE 0 END) AS 'am_sb12',
        SUM(CASE WHEN r.reg_month='12' AND r.afternoon='上班' THEN 0.5 ELSE 0 END) AS 'pm_sb12',
        SUM(CASE WHEN r.reg_month='12' AND r.morning='休息' THEN 0.5 ELSE 0 END) AS 'am_xx12',
        SUM(CASE WHEN r.reg_month='12' AND r.afternoon='休息' THEN 0.5 ELSE 0 END) AS 'pm_xx12',
        SUM(CASE WHEN r.reg_month='12' AND r.morning='请假' THEN 0.5 ELSE 0 END) AS 'am_qj12',
        SUM(CASE WHEN r.reg_month='12' AND r.afternoon='请假' THEN 0.5 ELSE 0 END) AS 'pm_qj12',
        SUM(CASE WHEN r.reg_month='12' AND r.morning='加班' THEN 0.5 else 0 end) AS 'am_jb12',
        SUM(CASE WHEN r.reg_month='12' AND r.afternoon='加班' THEN 0.5 else 0 end) AS 'pm_jb12'

        FROM work_person p
        LEFT JOIN work_register r ON p.account=r.person_id AND r.reg_year=#{regYear,jdbcType=VARCHAR}
        LEFT JOIN work_enterprise e ON p.enterprise_id = e.id
        <where>
            <if test="name != null and name !=''">
                and p.name like concat('%',#{name},'%')
            </if>
            <if test="enterpriseName != null and enterpriseName !=''">
                and e.name like concat('%',#{enterpriseName},'%')
            </if>
            <if test="morningOrAfternoon != null and morningOrAfternoon !=''">
                and (r.morning = #{morningOrAfternoon} or r.afternoon= #{morningOrAfternoon})
            </if>
            <if test="status != null and status !=''">
                and p.effective_flag = #{status}
            </if>
        </where>
        GROUP BY p.id ORDER BY attendanceRate DESC )m
        <if test="isPage==true">
            limit #{curPage},#{pageSize}
        </if>
    </select>
    <select id="selectCountAttendancePersonByMap" resultType="java.lang.Integer" parameterType="map">
        SELECT COUNT(m.id) FROM
        (
        SELECT p.id FROM work_person p
        LEFT JOIN work_register r ON p.account=r.person_id AND r.reg_year=#{regYear,jdbcType=VARCHAR}
        LEFT JOIN work_enterprise e ON p.enterprise_id = e.id
        <if test="regYearMonth !=null and regYearMonth != ''">
            and r.reg_year_month = #{regYearMonth}
        </if>
        <where>
            <if test="name != null and name !=''">
                and p.name like concat('%',#{name},'%')
            </if>
            <if test="enterpriseName != null and enterpriseName !=''">
                and e.name like concat('%',#{enterpriseName},'%')
            </if>
            <if test="status != null and status !=''">
                and p.effective_flag = #{status}
            </if>
        </where>
        GROUP BY p.id)m
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from work_register
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cost168.costaudit.pojo.work.WorkRegisterExample" >
    delete from work_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cost168.costaudit.pojo.work.WorkRegister" >
    insert into work_register (id, person_id, enterprise_id, 
      reg_year_month, reg_year, reg_month, 
      morning, afternoon, reg_day, 
      working_day,creater, create_time, update_time, 
      remark, register_time)
    values (#{id,jdbcType=VARCHAR}, #{personId,jdbcType=VARCHAR}, #{enterpriseId,jdbcType=VARCHAR}, 
      #{regYearMonth,jdbcType=VARCHAR}, #{regYear,jdbcType=VARCHAR}, #{regMonth,jdbcType=VARCHAR}, 
      #{morning,jdbcType=VARCHAR}, #{afternoon,jdbcType=VARCHAR}, #{regDay,jdbcType=VARCHAR}, 
      #{workingDay,jdbcType=REAL},#{creater,jdbcType=VARCHAR} #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cost168.costaudit.pojo.work.WorkRegister" >
    insert into work_register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="regYearMonth != null" >
        reg_year_month,
      </if>
      <if test="regYear != null" >
        reg_year,
      </if>
      <if test="regMonth != null" >
        reg_month,
      </if>
      <if test="morning != null" >
        morning,
      </if>
      <if test="afternoon != null" >
        afternoon,
      </if>
      <if test="regDay != null" >
        reg_day,
      </if>
      <if test="workingDay != null" >
        working_day,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="regYearMonth != null" >
        #{regYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="regYear != null" >
        #{regYear,jdbcType=VARCHAR},
      </if>
      <if test="regMonth != null" >
        #{regMonth,jdbcType=VARCHAR},
      </if>
      <if test="morning != null" >
        #{morning,jdbcType=VARCHAR},
      </if>
      <if test="afternoon != null" >
        #{afternoon,jdbcType=VARCHAR},
      </if>
      <if test="regDay != null" >
        #{regDay,jdbcType=VARCHAR},
      </if>
      <if test="workingDay != null" >
        #{workingDay,jdbcType=REAL},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cost168.costaudit.pojo.work.WorkRegisterExample" resultType="java.lang.Integer" >
    select count(*) from work_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work_register
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.personId != null" >
        person_id = #{record.personId,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseId != null" >
        enterprise_id = #{record.enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="record.regYearMonth != null" >
        reg_year_month = #{record.regYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.regYear != null" >
        reg_year = #{record.regYear,jdbcType=VARCHAR},
      </if>
      <if test="record.regMonth != null" >
        reg_month = #{record.regMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.morning != null" >
        morning = #{record.morning,jdbcType=VARCHAR},
      </if>
      <if test="record.afternoon != null" >
        afternoon = #{record.afternoon,jdbcType=VARCHAR},
      </if>
      <if test="record.regDay != null" >
        reg_day = #{record.regDay,jdbcType=VARCHAR},
      </if>
      <if test="record.workingDay != null" >
        working_day = #{record.workingDay,jdbcType=REAL},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work_register
    set id = #{record.id,jdbcType=VARCHAR},
      person_id = #{record.personId,jdbcType=VARCHAR},
      enterprise_id = #{record.enterpriseId,jdbcType=VARCHAR},
      reg_year_month = #{record.regYearMonth,jdbcType=VARCHAR},
      reg_year = #{record.regYear,jdbcType=VARCHAR},
      reg_month = #{record.regMonth,jdbcType=VARCHAR},
      morning = #{record.morning,jdbcType=VARCHAR},
      afternoon = #{record.afternoon,jdbcType=VARCHAR},
      reg_day = #{record.regDay,jdbcType=VARCHAR},
      working_day = #{record.workingDay,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cost168.costaudit.pojo.work.WorkRegister" >
    update work_register
    <set >
      <if test="personId != null" >
        person_id = #{personId,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="regYearMonth != null" >
        reg_year_month = #{regYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="regYear != null" >
        reg_year = #{regYear,jdbcType=VARCHAR},
      </if>
      <if test="regMonth != null" >
        reg_month = #{regMonth,jdbcType=VARCHAR},
      </if>
      <if test="morning != null" >
        morning = #{morning,jdbcType=VARCHAR},
      </if>
      <if test="afternoon != null" >
        afternoon = #{afternoon,jdbcType=VARCHAR},
      </if>
      <if test="regDay != null" >
        reg_day = #{regDay,jdbcType=VARCHAR},
      </if>
      <if test="workingDay != null" >
        working_day = #{workingDay,jdbcType=REAL},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cost168.costaudit.pojo.work.WorkRegister" >
    update work_register
    set person_id = #{personId,jdbcType=VARCHAR},
      enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      reg_year_month = #{regYearMonth,jdbcType=VARCHAR},
      reg_year = #{regYear,jdbcType=VARCHAR},
      reg_month = #{regMonth,jdbcType=VARCHAR},
      morning = #{morning,jdbcType=VARCHAR},
      afternoon = #{afternoon,jdbcType=VARCHAR},
      reg_day = #{regDay,jdbcType=VARCHAR},
      working_day = #{workingDay,jdbcType=REAL},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>